priority -30

extends dot
extends tex

snippet url "myUltiSnips" i
<${VISUAL}http://${1:url}>$0
endsnippet
snippet src "myUltiSnips" i
<img src="${VISUAL}$1" width="${2:100}" align=${3:center} />$0
endsnippet
snippet img "Image"
![${1:${VISUAL}}](images/$2${1/.+/ "/}$1${1/.+/"/})

$0
endsnippet
snippet tab "Table"
![${1:${VISUAL}}](tab/$2${1/.+/ "/}$1${1/.+/"/})

$0
endsnippet

snippet sec "Section" b
# ${1:${VISUAL}} #
$0
endsnippet
snippet ssec "Sub Section" b
## ${1:${VISUAL}} ##
$0
endsnippet
snippet sssec "SubSub Section" b
### ${1:${VISUAL}} ###
$0
endsnippet
snippet par "Paragraph" b
#### ${1:${VISUAL}} ####
$0
endsnippet
snippet spar "Paragraph" b
##### ${1:${VISUAL}} #####
$0
endsnippet
snippet kbd "myUltiSnips" i
<kbd>${VISUAL}$1</kbd>$0
endsnippet
snippet git "myUltiSnips" b
git clone git@github.com:`!v g:snips_author`/$1.git
mv $1/* $1/.* . && rm $1
$0
endsnippet
snippet ch "myUltiSnips" b
sudo chown $USERNAME ${1:.}${2: -R}
sudo chgrp $USERNAME $1$2
$0
endsnippet
snippet mermaid "myUltiSnips" i
mermaid
${1:g}${1/(g)$|(gr)$|(s)$|(p)$|(st)$|(c)$|(.*)/(?1:ant)(?2:raph)(?3:sequenceDiagram)(?4:ie)(?5:tateDiagram)(?6:lassDiagram)/}
endsnippet
snippet gant "myUltiSnips" i
gantt
dateFormat DD-MM-YYYY
axisFormat %m/%y
title $1
section $2
activity :$3, $4, $5
$0
endsnippet
snippet sequenceDiagram "myUltiSnips" b
sequenceDiagram
${1:Bob} -> ${2:Alice}: $3
$0
endsnippet
snippet pie "myUltiSnips" b
pie
	"$1": $2
$0
endsnippet
snippet plantuml "myUltiSnips" i
plantuml
${1:Bob} -> ${2:Alice}: $3
endsnippet
snippet sequence-diagrams "myUltiSnips" i
sequence-diagrams
${1:Bob} -> ${2:Alice}: $3
endsnippet
snippet chart "myUltiSnips" i
chart
{
"type": "pie",
"data": {
"labels": [
	"$1",
	"$2",
	"$3"
],
"datasets": [
	{
		"data": [
			$4,
			$5,
			$6
		],
		"backgroundColor": [
			"#FF6384",
			"#36A2EB",
			"#FFCE56"
		],
		"hoverBackgroundColor": [
			"#FF6384",
			"#36A2EB",
			"#FFCE56"
		]
	}
]
},
	"options": {}
}
$0
endsnippet
snippet fa "myUltiSnips" i
fa:fa-$0
endsnippet

snippet sympy "sympy block " w
sympy $1 endsympy$0
endsnippet

snippet 'sympy(.*)endsympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
		      .replace('^', '**') \
		      .replace('{', '(') \
		   .replace('}', ')') + ')')
`
endsnippet

snippet math "mathematica block" w
math $1 endmath$0
endsnippet

snippet 'math(.*)endmath' "evaluate mathematica" wr
`!p
import subprocess
code = 'ToString[' + match.group(1) + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet
# 1}}} latex-math-python #

# latex-math-function {{{1 #

snippet hat "myUltiSnips" i
\hat{${1:${VISUAL}}}$0
endsnippet

snippet int "myUltiSnips" i
\int\nolimits_{${1:-\infty}}^${2:\infty} $0
endsnippet

snippet sum "myUltiSnips" i
\sum_{${1:i} = ${2:-\infty}}^${3:\infty} $0
endsnippet

snippet pro "myUltiSnips" i
\prod_{${1:i} = ${2:-\infty}}^${3:\infty} $0
endsnippet

snippet lef "myUltiSnips" i
\left${1:(}${3:${VISUAL}}\right${2:)}$0
endsnippet

snippet big "myUltiSnips" i
\bigl${1:(}${3:${VISUAL}}\bigr${2:)}$0
endsnippet

snippet Big "myUltiSnips" i
\Bigl${1:(}${3:${VISUAL}}\Bigr${2:)}$0
endsnippet

snippet bigg "myUltiSnips" i
\biggl${1:(}${3:${VISUAL}}\biggr${2:)}$0
endsnippet

snippet Bigg "myUltiSnips" i
\Biggl${1:(}${3:${VISUAL}}\Biggr${2:)}$0
endsnippet

snippet \{ "myUltiSnips" i
\\{${1:${VISUAL}}\\}$0
endsnippet

snippet "([A-Za-z'])(\d)" "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet "([A-Za-z'])_(\d\d)" "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet "([A-Za-z'])_" "auto subscript2" wr
`!p snip.rv = match.group(1)`_{${1:${VISUAL}}}$0
endsnippet

snippet ^ "auto subscript2" w
^{${1:${VISUAL}}}$0
endsnippet

snippet '([A-Za-z])\^(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`^{`!p snip.rv = match.group(2)`}
endsnippet

snippet bin "myUltiSnips" i
($1)_{(2)} $0
endsnippet

snippet sq "myUltiSnips" i
\sqrt{${1:${VISUAL}}}$0
endsnippet

snippet __ "myUltiSnips" iA
_\mathrm{${VISUAL}$1}$0
endsnippet

snippet lim "myUltiSnips" i
\lim_{${1:n} \to ${2:\infty}}$0
endsnippet

snippet fr "myUltiSnips" i
\frac{${VISUAL}$1}{$2}$0
endsnippet

snippet case "myUltiSnips" b
\begin{cases}
	$1
\end{cases}
$0
endsnippet

snippet ali "myUltiSnips" b
\begin{aligned}
	$1
\end{aligned}
$0
endsnippet

snippet dcase "myUltiSnips" b
\begin{dcases}
	$1
\end{dcases}
$0
endsnippet

snippet over "myUltiSnips" i
\overline{${1:${VISUAL}}}$0
endsnippet
# 1}}} latex-math-function #

# latex-math-font {{{1 #

snippet mb "myUltiSnips" i
\mathbb{${1:${VISUAL}}}$0
endsnippet

snippet mf "myUltiSnips" i
\mathfrak{${1:${VISUAL}}}$0
endsnippet

snippet mc "myUltiSnips" i
\mathcal{${1:${VISUAL}}}$0
endsnippet

snippet ms "myUltiSnips" i
\mathscr{${1:${VISUAL}}}$0
endsnippet

snippet mr "myUltiSnips" i
\mathrm{${1:${VISUAL}}}$0
endsnippet

snippet mo "myUltiSnips" i
\mathop{${1:${VISUAL}}}$0
endsnippet
# 1}}} latex-math-font #

# matrix {{{1 #

snippet mat "myUltiSnips" b
\begin{matrix}
$0
\end{matrix}
endsnippet

snippet bmat "myUltiSnips" b
\begin{bmatrix}
$0
\end{bmatrix}
endsnippet

snippet Bmat "myUltiSnips" b
\begin{Bmatrix}
$0
\end{Bmatrix}
endsnippet

snippet pmat "myUltiSnips" b
\begin{pmatrix}
$0
\end{pmatrix}
endsnippet

snippet vmat "myUltiSnips" b
\begin{vmatrix}
$0
\end{vmatrix}
endsnippet

snippet Vmat "myUltiSnips" b
\begin{Vmatrix}
$0
\end{Vmatrix}
endsnippet
# 1}}} matrix #

# latex-math-space {{{1 #
snippet - "myUltiSnips" iA
 - $0
endsnippet
snippet "([^A-Za-z0-9\}\)\]']) - " "myUltiSnips" irA
`!p snip.rv = match.group(1)`-$0
endsnippet

snippet '(\s) & ' "myUltiSnips" irA
`!p snip.rv = match.group(1)`& $0
endsnippet

snippet '(\s) = ' "myUltiSnips" irA
`!p snip.rv = match.group(1)`= $0
endsnippet

snippet : "myUltiSnips" iA
: $0
endsnippet
# 1}}} latex-math-space #
